user  root;
worker_processes  1;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format json_combined escape=json
      '{'
        '"time_local": "$time_local", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": $status, '
        '"body_bytes_sent": $body_bytes_sent, '
        '"요청에 걸린 시간": $request_time, '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"request_method": "$request_method", '
        '"http_host": "$host", '
        '"server_protocol": "$server_protocol", '
        '"upstream_response_time": "$upstream_response_time", '
        '"upstream_addr": "$upstream_addr"'
      '}';

    access_log /var/log/nginx/access_json.log json_combined;
    error_log  /var/log/nginx/error.log warn;

    sendfile        on;
    keepalive_timeout  65;


    # modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;
    # modsecurity on;

    # Django 애플리케이션에 대한 설정

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    # HTTPS 서버 설정
    server {
        listen 443 ssl;
        include       /etc/nginx/mime.types;

        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;
        ssl_protocols TLSv1.1 TLSv1.2;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /static/ {
            alias /usr/share/nginx/html/static/;
        }

            # Django 관리자 및 Swagger 문서를 위한 위치 설정
        location ~ ^/(admin|redoc|swagger) {
            proxy_pass https://django_node_app:8443;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /api {
            proxy_pass https://django_node_app:8443;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host 'localhost';
            proxy_cache_bypass $http_upgrade;
        }

        location /ws/ {
            proxy_pass https://django_node_app:8443;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            access_log off;
        }
    }
}
