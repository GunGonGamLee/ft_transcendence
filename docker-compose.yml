version: '3.0'

services:
  # hashicorp_vault:
    # build:
      # context: ./vault
      # dockerfile: Dockerfile
    # ports:
      # - 8200:8200
    # volumes:
      # - "./volumes/vault/file:/vault/file"
      # - "./volumes/vault/logs:/vault/logs"
      # - "./volumes/vault/config:/vault/config"
    # environment:
      # VAULT_ADDR: "http://hashicorp_vault:8200"
    # cap_add:
      # - IPC_LOCK
    # networks:
      # - app_network

  django_node_app:
    build: .
    container_name: django_node_container
    ports:
      - 8000:8000 #django
    networks:
      - app_network
    environment:
    # DB
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_DATABASE: ${DB_DATABASE}
      DB_PASSWORD: ${DB_PASSWORD}
    # LOGSTASH
      LOG_KEY: ${LOG_KEY}
    # Hashicorp vault
      VAULT_URL: "http://hashicorp_vault:8200"
      VAULT_TOKEN: ${VAULT_TOKEN}
    # SMTP EMAIL
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
    # Google, 42 Oauth
      GOOGLE_AUTHORIZE_API: ${GOOGLE_AUTHORIZE_API}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      STATE: ${STATE}
      INTRA42_AUTHORIZE_API: ${INTRA42_AUTHORIZE_API}
      INTRA42_TOKEN_API: ${INTRA42_TOKEN_API}
      INTRA42_CLIENT_ID: ${INTRA42_CLIENT_ID}
      INTRA42_CLIENT_SECRET: ${INTRA42_CLIENT_SECRET}
      INTRA42_REDIRECT_URI: ${INTRA42_REDIRECT_URI}
      INTRA42_USERINFO_API: ${INTRA42_USERINFO_API}

    # depends_on:
      # - hashicorp_vault

  nginx:
    build: ./nginx
    container_name: nginx_container
    volumes:
      - "./volumes/nginx:/etc/nginx/conf.d"
      - "./frontend:/usr/share/nginx/html"
    ports:
      - 443:443 # https 사용
    depends_on:
      - django_node_app
    networks:
      - app_network

  # elasticsearch:
  #   build:
  #     context: ./elk/elasticsearch
  #     dockerfile: Dockerfile
  #   volumes:
  #     - "./volumes/elasticsearch/data:/usr/share/elasticsearch/data"
  #     - "./volumes/elasticsearch/certs:/usr/share/elasticsearch/config/certs"
  #   environment:
  #     discovery.type : single-node
  #     ELASTIC_PW : ${ELASTIC_PW}
  #     ES_JAVA_OPTS: "-Xms2g -Xmx2g"
  #     ES_CERTS_PW: ${ES_CERTS_PW}
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   networks:
  #     - app_network

  # logstash:
  #   build: ./elk/logstash
  #   container_name: logstash_container
  #   environment:
  #     LS_JAVA_OPTS: "-Xms2g -Xmx2g"
  #     ELASTIC_PW: ${ELASTIC_PW}
  #     ES_CERTS_PW: ${ES_CERTS_PW}
  #   volumes:
  #     - "./volumes/elasticsearch/certs:/usr/share/logstash/config/certs"
  #   ports:
  #     - 5333:5333
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app_network

  # kibana:
  #   build: ./elk/kibana
  #   container_name: kibana_container
  #   volumes:
  #     - "./volumes/kibana/data:/usr/share/kibana/data"
  #     - "./volumes/elasticsearch/certs:/usr/share/kibana/config/certs"
  #   environment:
  #     ELASTICSEARCH_URL: https://elasticsearch:9200
  #     ELASTIC_PW: ${ELASTIC_PW}
  #     ES_CERTS_PW: ${ES_CERTS_PW}
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app_network

networks:
  app_network:
    driver: bridge